<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation=" 
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
		 <context:component-scan base-package="com.redis.demo" />  
       
    <bean class="org.springframework.context.annotation.CommonAnnotationBeanPostProcessor" />  
     <!-- http://www.jianshu.com/p/1361d578035d -->
     
     <!-- <bean id="springSessionFilter"  class="org.springframework.session.data.redis.RedisOperationsSessionRepository">            
		<constructor-arg>               
		  <bean class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"    
		   p:port="${redis.port}" p:hostName="${redis.host}" 
		   p:password="${redis.password}"       p:poolConfigref="jedisPoolConfig" />            
		</constructor-arg>        
		</bean>    -->
     
     <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">  
		<property name="maxTotal" value="${redis.maxTotal}"/>   
		<property name="maxIdle" value="${redis.maxIdle}"/>  
		<property name="maxWaitMillis" value="${redis.maxWait}"/>    
		<property name="testOnBorrow" value="${redis.testOnBorrow}"/>
	</bean>
 
 
<bean id="jedisConnectionFactory"
    class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
    <property name="hostName" value="${redis.host}" />
    <property name="port" value="${redis.port}" />
    <property name="password" value="${redis.password}" />
    <property name="timeout" value="${redis.timeout}" />
    <property name="poolConfig" ref="jedisPoolConfig" />
    <property name="usePool" value="true" />
</bean>
 
<!-- <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
    <property name="connectionFactory" ref="jedisConnectionFactory" />
</bean> -->
 
  <!--  <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">  
	<property name="connectionFactory">        
		<bean class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"            
		  p:hostName="${redis.host}" p:port="${redis.port}"     
		           p:database="1"  p:password="${redis.password}"         
		     p:poolConfig-ref="jedisPoolConfig" />    </property>
	<property name="defaultSerializer" ref="stringRedisSerializer" />    
		<property name="keySerializer" ref="stringRedisSerializer" />   
		<property name="valueSerializer" ref="jdkSerializationRedisSerializer" />    
		<property name="hashValueSerializer" ref="jdkSerializationRedisSerializer" />
	</bean>
<bean id="stringRedisSerializer"	 class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
<bean id="jdkSerializationRedisSerializer"	 class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>-->


<bean id="redisHttpSessionConfiguration"
class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
    <property name="maxInactiveIntervalInSeconds" value="60" /><!-- 1分钟session超时 -->
</bean> 
	
	
     <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool"  scope="singleton">  
         <constructor-arg index="0" ref="jedisPoolConfig" />  
         <constructor-arg index="1">  
             <list>  
                 <bean class="redis.clients.jedis.JedisShardInfo">  
                     <constructor-arg name="host" value="${redis.host}" />  
                     <constructor-arg name="port" value="${redis.port}" />  
                     <constructor-arg name="timeout" value="${redis.timeout}" />  
                     <constructor-arg name="weight" value="1" />  
                 </bean>  
             </list>  
         </constructor-arg>  
     </bean>  

 </beans>
 